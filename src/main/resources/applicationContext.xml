<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:int="http://www.springframework.org/schema/integration" 
	xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd 
		http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
      	http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd">


	<!-- 隐式地向 Spring 容器注册 http://www.cnblogs.com/iuranus/archive/2012/07/19/2599084.html -->
	<context:annotation-config />
	
	<!-- -->
	<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true" />
	
	<context:component-scan base-package="cc.watchers.stuele"/>
	
	
		
	<!-- 消息对象json转换类 -->
	<bean id="jsonMessageConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />


		<!-- 全局初始化 -->
	<bean id="contextListener" class="cc.watchers.stuele.task.ContextListener"
		init-method="initialize" />
		
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.user}" />
      <property name="password" value="${jdbc.password}" />
        
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="1" />
      <property name="minIdle" value="1" /> 
      <property name="maxActive" value="20" />
   
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
   
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
   
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
    
      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
   
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
   
      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat" /> 
  </bean>
  

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="typeAliasesPackage" value="cc.watchers.stuele.orm.model"/>
    	<property name="mapperLocations">
        	<array>
        		<value>classpath:cc/watchers/stuele/orm/mybatis3/mapper/*Mapper.xml</value>
        	</array>
    	</property>
    	<property name="plugins">
        	<array>
            	<bean class="com.github.pagehelper.PageInterceptor">
                	<!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
                	<property name="properties">
                    	<value>
                        	helperDialect=mysql
                        	reasonable=true
                        	supportMethodsArguments=true
                        	params=count=countSql
                        	autoRuntimeDialect=true
                    	</value>
                	</property>
            	</bean>
        	</array>
    	</property>
	</bean>
  
  	<!-- 配置自动mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cc.watchers.stuele.orm.mybatis3.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

  	
</beans>
